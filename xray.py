# -*- coding: utf-8 -*-
"""xray.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yV9l7NqLnixNOCFfe2-c2gkSBh6q0NUW
"""

def run_example():
  img = load_image('C:/Users/anjuv/OneDrive/Desktop/coronacare/images/IM-0071-0001.jpeg')
  model = load_model('C:/Users/anjuv/OneDrive/Desktop/coronacare/keras_model.h5')
  model.compile()
  labels = [0 , 1]
  #print(labels)

  prediction = model.predict(img)
  #h=prediction.argmax(axis=-1)
  #print( model.predict_proba(img))
  
  #print(h)
  #print(numpy.argmax(prediction))
  #model.predict_classes(img)
  #print(numpy.argmax(model.predict(img), axis=-1))

  #MaxPosition=numpy.argmax(prediction)  
  #prediction_label=classes[MaxPosition] 
  #print(prediction_label)
  #prediction.predict_classes()
  #print (prediction[0,1])  --------------
  #print (prediction[0,0])  ----------------
  #print(float(prediction[0,0]))
 # print("{:.8f}".format(float(prediction[0,1])))
  #print("{:.8f}".format(float(prediction[0,0])))
  if(prediction[0,0]<0.0000005):
    print(1)
  else:
    print(0)

  
 # list1=prediction.tolist()
  #print(type(prediction))
  #value=float(list1[0][1])
 # result=format(value,'.8f')
 # x = result.split(".",1)
 # y=int(int(x[1]))
  #print(y)
  #print(type(y))
 
 # if(list1[0]>list1[1]) :
  #  return (1)
  #else :
   # return 0
  #print(mo)
#run_example()
